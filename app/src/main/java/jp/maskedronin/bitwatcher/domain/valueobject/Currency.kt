package jp.maskedronin.bitwatcher.domain.valueobject

import jp.maskedronin.bitwatcher.R
import jp.maskedronin.bitwatcher.common.util.Logger
import jp.maskedronin.bitwatcher.presentation.common.resource.ColorResource
import java.util.*

private val CURRENCY_COLOR_UNDEFINED: ColorResource =
    ColorResource.fromAttr(R.attr.colorOnBackground)

enum class Currency(
    private val symbol: String? = null,
    val colorResource: ColorResource = CURRENCY_COLOR_UNDEFINED,
    val isFiat: Boolean = false
) {
    BTC(colorResource = ColorResource.from(R.color.currency_btc)),
    ETH(colorResource = ColorResource.from(R.color.currency_eth)),
    FCT(colorResource = ColorResource.from(R.color.currency_fct)),
    LTC(colorResource = ColorResource.from(R.color.currency_ltc)),
    XRP(colorResource = ColorResource.from(R.color.currency_xrp)),
    ETC(colorResource = ColorResource.from(R.color.currency_etc)),
    LSK(colorResource = ColorResource.from(R.color.currency_lsk)),
    SJCX,
    XEM(colorResource = ColorResource.from(R.color.currency_xem)),
    MOSAIC_CMS(symbol = "MOSAIC.CMS"),
    NCXC,
    ZAIF(colorResource = ColorResource.from(R.color.currency_zaif)),
    BCH(colorResource = ColorResource.from(R.color.currency_bch)),
    CSBTC,
    XCP(colorResource = ColorResource.from(R.color.currency_xcp)),
    MONA(colorResource = ColorResource.from(R.color.currency_mona)),
    BCY,
    CSCMSETH,
    FSCC,
    JPYZ,
    CSZAIF,
    CSCMSXEM,
    CSXEM,
    ERC20_CMS(symbol = "ERC20.CMS"),
    PEPECASH,
    CSETH,
    CICC,
    XLM(colorResource = CURRENCY_COLOR_UNDEFINED),
    QTUM(colorResource = ColorResource.from(R.color.currency_qtum)),
    FIRST(symbol = "1ST"),
    ABBC,
    ABYSS,
    ADA(colorResource = ColorResource.from(R.color.currency_ada)),
    USDT(colorResource = ColorResource.from(R.color.currency_usdt)),
    ADT,
    ADX,
    AEON,
    AID,
    AKRO,
    ANKR,
    ANT,
    APIX,
    APM,
    ARDR,
    ARK,
    ART,
    ATOM(colorResource = ColorResource.from(R.color.currency_atom)),
    BAT(colorResource = ColorResource.from(R.color.currency_bat)),
    BFT,
    BKX,
    BLK,
    BLOC,
    BLOCK,
    BLTV,
    BNT,
    BOA,
    BORA,
    BSV(colorResource = ColorResource.from(R.color.currency_bsv)),
    BTM,
    BTS,
    BTT,
    BTU,
    BURST,
    BWX,
    CHR,
    CKB,
    CMCT,
    CND,
    COSM,
    CPC,
    CPT,
    CRO(colorResource = ColorResource.from(R.color.currency_cro)),
    CRW,
    CTC,
    CTXC,
    CURE,
    CVC,
    CVT,
    DAI,
    DASH(colorResource = ColorResource.from(R.color.currency_dash)),
    DCR(colorResource = ColorResource.from(R.color.currency_dcr)),
    DCT,
    DENT,
    DGB,
    DMT,
    DNT,
    DOGE(colorResource = ColorResource.from(R.color.currency_doge)),
    DRGN,
    DTA,
    DUSK,
    EDG,
    EDR,
    ELAMA,
    ELF,
    EMC2,
    ENG,
    ENJ,
    EOS(colorResource = CURRENCY_COLOR_UNDEFINED),
    EXCL,
    EXP,
    FLETA,
    FLO,
    FNB,
    FRSP,
    FSN,
    FTC,
    FX,
    FXC,
    GAME,
    GBYTE,
    GEO,
    GNO,
    GNT,
    GO,
    GRIN,
    GRS,
    GTO,
    GUP,
    HBAR(colorResource = CURRENCY_COLOR_UNDEFINED),
    HBD,
    HDAC,
    HEDG(colorResource = ColorResource.from(R.color.currency_hedg)),
    HIVE,
    HMQ,
    HXRO,
    HYC,
    HYDRO,
    IGNIS,
    IHT,
    INCNT,
    IOC,
    ION,
    IOST,
    IOTA(colorResource = ColorResource.from(R.color.currency_iota)),
    IOTX,
    IRIS,
    JNT,
    KMD,
    LAMB,
    LBA,
    LBC,
    LINK(colorResource = ColorResource.from(R.color.currency_link)),
    LOOM,
    LRC,
    LUNA,
    MAID,
    MANA,
    MCO,
    MED,
    MEME,
    MER,
    META,
    MET,
    MFT,
    MOC,
    MOF,
    MORE,
    MRPH,
    MTL,
    MUE,
    NAV,
    NEO(colorResource = ColorResource.from(R.color.currency_neo)),
    NKN,
    NLC2,
    NLG,
    NMR,
    NPXS,
    NXS,
    NXT,
    OCEAN,
    OK,
    OMG,
    ONG,
    ONT(colorResource = ColorResource.from(R.color.currency_ont)),
    ORBS,
    OST,
    PAL,
    PART,
    PAX(colorResource = ColorResource.from(R.color.currency_pax)),
    PAY,
    PI,
    PINK,
    PIVX,
    PLA,
    PLG,
    PMA,
    POT,
    POWR,
    PPC,
    PROM,
    PTON,
    PTOY,
    PXL,
    QNT,
    QRL,
    RADS,
    RCN,
    RDD,
    REP(colorResource = ColorResource.from(R.color.currency_rep)),
    RFR,
    RLC,
    RVN(colorResource = ColorResource.from(R.color.currency_rvn)),
    SBD,
    SC,
    SIB,
    SIX,
    SLS,
    SNT,
    SOLVE,
    SPC,
    SPHR,
    SPIN,
    SPND,
    SRN,
    STC,
    STEEM,
    STORJ,
    STORM,
    STPT,
    STRAT,
    SXP,
    SYS,
    TEMCO,
    TRAC,
    TRX(colorResource = ColorResource.from(R.color.currency_trx)),
    TSHP,
    TTC,
    TUBE,
    TUDA,
    TUSD(colorResource = ColorResource.from(R.color.currency_tusd)),
    UBQ,
    UKG,
    UPEUR,
    UPP,
    UPT,
    UPUSD,
    URAC,
    USDS,
    UTK,
    VANY,
    VBK,
    VDX,
    VEE,
    VET(colorResource = ColorResource.from(R.color.currency_vet)),
    VIA,
    VIB,
    VITE,
    VRA,
    VRC,
    VTC,
    WAVES(colorResource = ColorResource.from(R.color.currency_waves)),
    WAXP,
    WGP,
    WICC,
    XDN,
    XEL,
    XHV,
    XMR(colorResource = ColorResource.from(R.color.currency_xmr)),
    XMY,
    XSR,
    XST,
    XTP,
    XTZ(colorResource = ColorResource.from(R.color.currency_xtz)),
    XVG,
    XZC,
    ZEC(colorResource = ColorResource.from(R.color.currency_zec)),
    ZEN,
    ZIL,
    ZRX(colorResource = CURRENCY_COLOR_UNDEFINED),
    BNB(colorResource = ColorResource.from(R.color.currency_bnb)),
    BCC,
    GAS,
    HSR,
    OAX,
    ICN,
    WTC,
    YOYO,
    SNGLS,
    BQX,
    KNC,
    FUN,
    SNM,
    SALT,
    MDA,
    SUB,
    MTH,
    AST,
    BTG(colorResource = ColorResource.from(R.color.currency_btg)),
    EVX,
    REQ,
    MOD,
    VEN,
    NULS,
    RDN,
    DLT,
    AMB,
    BCPT,
    ARN,
    GVT,
    CDT,
    GXS,
    POE,
    QSP,
    TNT,
    FUEL,
    BCD(colorResource = ColorResource.from(R.color.currency_bcd)),
    DGD,
    PPT,
    CMT,
    LEND,
    WABI,
    TNB,
    ICX(colorResource = ColorResource.from(R.color.currency_icx)),
    AION,
    NEBL,
    BRD,
    EDO,
    WINGS,
    LUN,
    TRIG,
    APPC,
    VIBE,
    INS,
    CHAT,
    NANO,
    BLZ,
    AE,
    RPX,
    NCASH,
    POA,
    WAN,
    WPR,
    QLC,
    CLOAK,
    BCN,
    SKY,
    THETA,
    QKC,
    AGI,
    DATA,
    KEY,
    NAS,
    HOT,
    DOCK,
    POLY,
    PHX,
    HC,
    USDC(colorResource = ColorResource.from(R.color.currency_usdc)),
    MITH,
    BCHABC,
    BCHSV,
    REN,
    FET,
    CELR,
    MATIC,
    PHB,
    TFUEL,
    ONE,
    FTM,
    BTCB,
    ALGO(colorResource = CURRENCY_COLOR_UNDEFINED),
    USDSB,
    ERD,
    BGBP,
    WIN,
    COS,
    TUSDB,
    COCOS,
    TOMO,
    PERL,
    CHZ,
    BAND,
    BUSD(colorResource = ColorResource.from(R.color.currency_busd)),
    BEAM,
    STX,
    KAVA,
    NGN,
    ARPA,
    RUB,
    TROY,
    FTT(colorResource = ColorResource.from(R.color.currency_ftt)),
    TRY,
    OGN,
    DREP,
    BULL,
    BEAR,
    ETHBULL,
    ETHBEAR,
    TCT,
    WRX,
    LTO,
    EOSBULL,
    EOSBEAR,
    XRPBULL,
    XRPBEAR,
    MBL,
    COTI,
    BNBBULL,
    BNBBEAR,
    ZAR,
    STR,
    FOAM,
    LPT,
    ETHBNT,
    TRXBEAR,
    TRXBULL,
    USDJ,
    SNX(colorResource = ColorResource.from(R.color.currency_snx)),
    JEX,
    BKRW,
    HT(colorResource = ColorResource.from(R.color.currency_ht)),
    SOL,

    JPY(isFiat = true),
    USD(isFiat = true),
    EUR(isFiat = true),
    ;

    fun getSymbol(): String = symbol ?: name

    val isCrypto: Boolean
        get() = isFiat.not()
    val dealers: List<Exchange>
        get() = Exchange.values()
            .filter { it.cryptos.contains(this) }

    companion object {
        val fiats: List<Currency> = values().filter(Currency::isFiat)
        val cryptos: List<Currency> = values().filter(Currency::isCrypto)
        val settlements: Set<Currency> = setOf(
            JPY,
            USD,
            BTC,
            ETH
        )

        fun findBySymbol(symbol: String): Currency? = values().find {
            it.getSymbol() == symbol.toUpperCase(Locale.US)
        }.also { it ?: Logger.e(IllegalStateException("unknown symbol:$symbol")) }
    }
}